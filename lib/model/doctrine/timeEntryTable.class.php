<?php

/**
 * timeEntryTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class timeEntryTable extends Doctrine_Table
{
  protected $_task;

  public function addOrUpdateEntry($entry, sfTask $task = null)
  {
    $this->_task = $task;

    if ($this->entryExistsExactly($entry))
    {
      return;
    }

    if ($existingEntry = $this->entryExists($entry))
    {
      $this->updateEntry($existingEntry, $entry);
      return;
    }

    $this->addEntry($entry);
  }

  private function entryExistsExactly($entry)
  {
    $q = $this->createQuery('p')->where('p.basecamp_id = ?', $entry->getId())
      ->andWhere('p.description = ?', $entry->getDescription())
      ->andWhere('p.hours = ?', $entry->getHours());

    if ($q->count() > 0)
    {
      return true;
    }
    else
    {
      return false;
    }
  }
  
  private function entryExists($entry)
  {
    $q = $this->createQuery('p')->where('p.basecamp_id = ?', $entry->getId());

    if ($q->count() > 0)
    {
      return $q->fetchOne();
    }
    else
    {
      return false;
    }
  }

  private function addEntry($basecampEntry)
  {
    $entry = new timeEntry();

    $this->_updateDatabaseRecordFromApiRecord($entry, $basecampEntry);

    $entry->save();

    $this->logProgress(sprintf('New time entry added! "%s"', $entry->description));
  }

  private function updateEntry($existingEntry, $basecampEntry)
  {
    $this->_updateDatabaseRecordFromApiRecord($existingEntry, $basecampEntry);

    $existingEntry->save();

    $this->logProgress(sprintf('Updated existing time entry: "%s"', $existingEntry->description));
  }

  private function _updateDatabaseRecordFromApiRecord($dbRecord, $apiRecord)
  {
    $dbRecord->basecamp_id = $apiRecord->getId();
    $dbRecord->date = $apiRecord->getDate();
    $dbRecord->description = $apiRecord->getDescription();
    $dbRecord->hours = $apiRecord->getHours();
    $dbRecord->person_id = $apiRecord->getPersonId();
    $dbRecord->project_id = $apiRecord->getProjectId();
  }
  
  private function logProgress($msg)
  {
    if ($this->_task)
    {
      $this->_task->logSection('entryTable', $msg);
    }
  }
}